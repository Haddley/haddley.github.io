{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","components/TodoListItem.tsx","data/todos.ts","pages/Home.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","TodoListItem","todo","toggleTodo","checked","completed","onIonChange","guid","slot","className","task","db","Localbase","getTodos","a","collection","get","todos","console","log","setCompleted","doc","update","addToDo","description","replace","c","r","Math","random","toString","add","Home","useState","setTodos","text","setText","useIonViewWillEnter","existing","find","addTask","refresh","detail","complete","fullscreen","onIonRefresh","value","placeholder","onKeyPress","key","onClick","m","setupIonicReact","App","exact","path","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","alert"],"mappings":"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","file":"static/js/main.0f9ea471.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 57;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 58;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t93,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 59;\nmodule.exports = webpackAsyncContext;","import {\n  IonCheckbox,\n  IonItem,\n  IonLabel,\n  } from '@ionic/react';\nimport { Todo } from '../data/todos';\nimport './TodoListItem.css';\n\ninterface TodoListItemProps {\n  todo: Todo;\n  toggleTodo: any;\n}\n\nconst TodoListItem: React.FC<TodoListItemProps> = ({ todo, toggleTodo }) => {\n  return (\n    <IonItem >\n      <IonCheckbox checked={todo.completed} onIonChange={e => toggleTodo(todo.guid)} slot=\"start\"/>\n      <IonLabel className=\"ion-text-wrap\">\n          {todo.task}\n      </IonLabel>\n    </IonItem>\n  );\n};\n\nexport default TodoListItem;","import Localbase from 'localbase'\n\nfunction createGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport interface Todo {\n    guid: string;\n    task: string;\n    completed: boolean;\n}\n\nlet db = new Localbase('todos')\n\nexport const getTodos = async () => {\n    const todos = await db.collection('tasks').get()\n    console.log(todos)\n    return todos\n}\n\nexport const setCompleted: any = async (guid: string, completed: boolean) => {\n    await db.collection('tasks').doc({ guid: guid }).update({\n        completed: completed\n    })\n    return\n}\n\nexport const addToDo: any = async (description: string) => {\n    const guid = createGuid();\n    await db.collection('tasks').add({\n        guid: guid,\n        task: description,\n        completed: false\n    })\n    return guid\n}","import { IonButton, IonContent, IonHeader, IonInput, IonItem, IonList, IonPage, IonRefresher, IonRefresherContent, IonTitle, IonToolbar, useIonViewWillEnter } from '@ionic/react';\nimport { useState } from 'react';\nimport TodoListItem from '../components/TodoListItem';\nimport { addToDo, getTodos, setCompleted, Todo } from '../data/todos';\nimport './Home.css';\n\nconst Home: React.FC = () => {\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [text, setText] = useState<string>();\n\n  useIonViewWillEnter(async () => {\n    const todos = await getTodos();\n    setTodos(todos);\n  });\n\n\n  const toggleTodo = async (guid: string) => {\n    const existing = todos.find((todo) => todo.guid === guid)\n    if (existing) {\n      const completed = !existing.completed\n      await setCompleted(guid, completed)\n      // refresh from db\n      const todos = await getTodos();\n      setTodos(todos);\n    }\n  }\n\n  const addTask = async () => {\n    if (text) {\n      const guid = await addToDo(text)\n      console.log(guid)\n      //reset textbox\n      setText(() => '')\n      // refresh from db\n      const todos = await getTodos();\n      setTodos(todos);\n    }\n  }\n\n  const refresh = async (e: CustomEvent) => {\n    // refresh from db\n    const todos = await getTodos();\n    setTodos(todos);\n    e.detail.complete();\n  };\n\n  const HandleKeyPress = (value: any) => {\n    if (value == \"Enter\") {\n      //  console.log(\"Enter key pressed\")\n      addTask()\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Tasks</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n\n        <IonRefresher slot=\"fixed\" onIonRefresh={refresh}>\n          <IonRefresherContent></IonRefresherContent>\n        </IonRefresher>\n\n        <IonItem>\n          <IonInput value={text} placeholder=\"Enter task\" onKeyPress={e => HandleKeyPress(e.key)} onIonChange={e => setText(e.detail.value!)}></IonInput>\n          <IonButton slot=\"end\" onClick={() => addTask()}>Add</IonButton>\n        </IonItem>\n\n        <IonList>\n          {todos.map(m => <TodoListItem key={m.guid} todo={m} toggleTodo={toggleTodo} />)}\n        </IonList>\n\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet, setupIonicReact } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nsetupIonicReact();\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\nconst config = {\n  onUpdate: (registration: any) => { alert(\"An updated version of this app is available.  Please re-start the app.\") },\n}\n\nserviceWorkerRegistration.register(config);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}