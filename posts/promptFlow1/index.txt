1:"$Sreact.fragment"
2:I[9379,["619","static/chunks/619-ba102abea3e3d0e4.js","177","static/chunks/app/layout-b6140098d4dc0e33.js"],"default"]
3:I[9766,[],""]
4:I[8924,[],""]
6:I[4431,[],"OutletBoundary"]
8:I[5278,[],"AsyncMetadataOutlet"]
a:I[4431,[],"ViewportBoundary"]
c:I[4431,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[7150,[],""]
:HL["/_next/static/media/949adacb6381283a-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/9dd75fadc5b3df29-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/a7d33c8790143d66.css","style"]
0:{"P":null,"b":"RJUMHoOpO5HDs1LInqYrA","p":"","c":["","posts","promptFlow1",""],"i":false,"f":[[["",{"children":["posts",{"children":[["slug","promptFlow1","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a7d33c8790143d66.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"/assets/web/assets/mobirise-icons2/mobirise2.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/web/assets/mobirise-icons-bold/mobirise-icons-bold.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/bootstrap/css/bootstrap.min.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/bootstrap/css/bootstrap-grid.min.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/bootstrap/css/bootstrap-reboot.min.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/dropdown/css/style.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/socicon/css/styles.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/theme/css/style.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/mobirise/css/mbr-additional.css"}],["$","link",null,{"rel":"stylesheet","href":"/prism.css"}]]}],["$","body",null,{"className":"__className_2cd903 antialiased","children":[["$","$L2",null,{}],["$","main",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","promptFlow1","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
10:I[2619,["619","static/chunks/619-ba102abea3e3d0e4.js","356","static/chunks/356-1fcf197c11312f1f.js","858","static/chunks/app/posts/%5Bslug%5D/page-313a7831d907d705.js"],""]
11:I[8889,["619","static/chunks/619-ba102abea3e3d0e4.js","356","static/chunks/356-1fcf197c11312f1f.js","858","static/chunks/app/posts/%5Bslug%5D/page-313a7831d907d705.js"],"default"]
12:T1403,
# Prompt Flow (Part 1)

## Setup

![](/assets/images/promptflow1/logo.svg)
*This file is licensed under the MIT license.*


## Setup

Prompt flow is a development tool designed to streamline the development of AI applications powered by Large Language Models (LLMs).

Prompt flow applications can be [developed](https://microsoft.github.io/promptflow/how-to-guides/develop-a-dag-flow/index.html) using Azure or locally on a laptop.

Prompt flow application can be [deployed](https://microsoft.github.io/promptflow/how-to-guides/deploy-a-flow/index.html) using [Azure App Service](devopsstartergithubactions.html), [Docker](docker.html) or [Kubernetes](kubernetes.html).

Here I demonstrate how I used Prompt flow for Visual Studio Code to create and run a couple of sample AI applications.

The result is not very different from AI applications I have developed in the past using [langchain](llamaCorp.html).

![](/assets/images/promptflow1/screenshot-2024-06-11-at-8.18.26am-1836x1055.png)
*I downloaded Python from the python.org web site*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-8.19.03am-1236x886.png)
*I installed Python 3.12.4 for macOS*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-8.21.51am-1836x993.png)
*I ran the Install Certificates script*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-8.23.34am-1836x1046.png)
*I downloaded Visual Studio Code (the Apple silicon build)*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-8.25.35am-1836x691.png)
*I installed the Prompt flow VS Code extension*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.14.11am-1836x329.png)
*I opened a folder and ran the Python: Create Environment command.*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.14.23am-1836x379.png)
*I created a .venv environment in the project's folder*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.16.29am-1836x1286.png)
*I selected the Prompt flow extension (the "P" logo) and clicked the QUICK ACCESS | Install dependencies menu item*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.18.32am-1836x1295.png)
*I used source .venv/bin/activate to activate the environmentI used pip install promptflow to add the promptflow dependencies*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.19.42am-1836x1292.png)
*I ran pf -v to see what version of Prompt flow was installed*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.20.50am-1836x1291.png)
*I clicked on FLOWS and navigated to the included standard_flowI ensured that the .venv virtual environment was selected and entered a text default value "Hello World"*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-10.21.15am-1836x1289.png)
*I clicked the Test menu item to run the standard_flowThe default text value was added to the "Prompt:" and "Write a simple {{text}} program that displays the greeting message." text*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-2.06.28pm-1836x1142.png)
*The "Prompt: " text is included in the hello.py source code*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-2.07.46pm-1836x1145.png)
*The flow.dag.yaml file describes the flow*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-2.07.54pm-1836x1135.png)
*The hello.jinja2 template contains the "Write a simple {{text}}..." text*


## Creating a new flow

I used the **+Create new flow** menu item to create a new flow.

I used the **Open** menu item to view the flow.

I used the **Test** menu item to run the flow.

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.43.33am-1836x1040.png)
*I generated a new Open AI key and used it to create a Prompt flow connection*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.46.01am-1836x1145.png)
*I created a chat flow*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.46.13am-1836x210.png)
*I accepted the default flow name*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.47.11am-1836x1143.png)
*I updated the flow to make use of the OpenAI (large language model) connection*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.48.52am-1836x631.png)
*I updated the default question text*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.53.54am-1836x1152.png)
*I used the Test menu item to run the flow with standard mode*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-2.41.16pm-1836x1393.png)
*I ran the Prompt flow with interactive mode (multi-modal)*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.55.54am-1836x1144.png)
*The new chat flow included a single llm tool (named "chat")*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-11.54.07am-1836x1145.png)
*The chat.jinja2 file is used to compose the large language model prompt (with the chat history included)*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-3.00.40pm-1836x617.png)
*Prompt flow traces*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-2.58.43pm-1836x955.png)
*Open AI activity*

![](/assets/images/promptflow1/screenshot-2024-06-11-at-2.58.52pm-1836x953.png)
*Open AI cost $*
5:[["$","section",null,{"className":"content4 cid-uBU3VQlp0E","id":"content4-cru","children":["$","div",null,{"className":"container","children":["$","div",null,{"className":"row justify-content-center","children":["$","div",null,{"className":"title col-md-12 col-lg-10","children":[["$","h3",null,{"className":"mbr-section-title mbr-fonts-style align-center mb-4 display-2","children":["$","strong",null,{"children":"Prompt flow (Part 1)"}]}],["$","h4",null,{"className":"mbr-section-subtitle align-center mbr-fonts-style mb-4 display-5","children":"Docker"}]]}]}]}]}],["$","section",null,{"className":"content1 cid-content","id":"content1-breadcrumb","children":["$","div",null,{"className":"container","children":["$","div",null,{"className":"row justify-content-center","children":["$","div",null,{"className":"col-md-12 col-lg-10","children":["$","div",null,{"className":"mb-4","children":["$","$L10",null,{"href":"/posts","className":"link text-primary display-7","children":"← Back to Posts"}]}]}]}]}]}],["$","$L11",null,{"markdownContent":"$12"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
13:I[622,[],"IconMark"]
9:{"metadata":[["$","title","0",{"children":"Neil Haddley - Developer & Technical Consultant"}],["$","meta","1",{"name":"description","content":"I help organizations to connect with clients, comply with regulations, and automate workflows."}],["$","meta","2",{"name":"author","content":"Neil Haddley"}],["$","meta","3",{"name":"keywords","content":"developer, consultant, Azure, Angular, Business Central, automation"}],["$","meta","4",{"name":"creator","content":"Neil Haddley"}],["$","meta","5",{"property":"og:title","content":"Neil Haddley - Developer & Technical Consultant"}],["$","meta","6",{"property":"og:description","content":"I help organizations to connect with clients, comply with regulations, and automate workflows."}],["$","meta","7",{"property":"og:url","content":"https://haddley.github.io/"}],["$","meta","8",{"property":"og:site_name","content":"Neil Haddley"}],["$","meta","9",{"property":"og:locale","content":"en_US"}],["$","meta","10",{"property":"og:type","content":"website"}],["$","meta","11",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","12",{"name":"twitter:title","content":"Neil Haddley - Developer & Technical Consultant"}],["$","meta","13",{"name":"twitter:description","content":"I help organizations to connect with clients, comply with regulations, and automate workflows."}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","$L13","15",{}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
