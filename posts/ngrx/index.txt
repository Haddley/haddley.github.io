1:"$Sreact.fragment"
2:I[9379,["619","static/chunks/619-ba102abea3e3d0e4.js","177","static/chunks/app/layout-b6140098d4dc0e33.js"],"default"]
3:I[9766,[],""]
4:I[8924,[],""]
6:I[4431,[],"OutletBoundary"]
8:I[5278,[],"AsyncMetadataOutlet"]
a:I[4431,[],"ViewportBoundary"]
c:I[4431,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[7150,[],""]
:HL["/_next/static/media/949adacb6381283a-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/9dd75fadc5b3df29-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/a7d33c8790143d66.css","style"]
0:{"P":null,"b":"RJUMHoOpO5HDs1LInqYrA","p":"","c":["","posts","ngrx",""],"i":false,"f":[[["",{"children":["posts",{"children":[["slug","ngrx","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a7d33c8790143d66.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"stylesheet","href":"/assets/web/assets/mobirise-icons2/mobirise2.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/web/assets/mobirise-icons-bold/mobirise-icons-bold.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/bootstrap/css/bootstrap.min.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/bootstrap/css/bootstrap-grid.min.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/bootstrap/css/bootstrap-reboot.min.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/dropdown/css/style.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/socicon/css/styles.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/theme/css/style.css"}],["$","link",null,{"rel":"stylesheet","href":"/assets/mobirise/css/mbr-additional.css"}],["$","link",null,{"rel":"stylesheet","href":"/prism.css"}]]}],["$","body",null,{"className":"__className_2cd903 antialiased","children":[["$","$L2",null,{}],["$","main",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","ngrx","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
10:I[2619,["619","static/chunks/619-ba102abea3e3d0e4.js","356","static/chunks/356-1fcf197c11312f1f.js","858","static/chunks/app/posts/%5Bslug%5D/page-313a7831d907d705.js"],""]
11:I[8889,["619","static/chunks/619-ba102abea3e3d0e4.js","356","static/chunks/356-1fcf197c11312f1f.js","858","static/chunks/app/posts/%5Bslug%5D/page-313a7831d907d705.js"],"default"]
12:T1d2c,
# NGRX

## A framework for building reactive applications in Angular

![](/assets/images/ngrx/ngrx.svg)
*This file is licensed under the Creative Commons 4.0.*


## NGRX

NgRx is inspired by the Redux pattern. 

NgRx stores a single state and uses actions to express state changes.

![](/assets/images/ngrx/state-management-lifecycle-1836x1033.png)
*NGRX state management lifecycle*


## haddley-ngrx

I installed the Angular command line interface using [npm](npm.html)

```bash
% npm i -g @angular/cli
```

I created a new Angular project using "ng new"

```bash
% ng new haddley-ngrx
```

![](/assets/images/ngrx/screen-shot-2022-11-27-at-3.16.50-pm-1150x684.png)
*ng new haddley-ngrx*


## State

The state of the haddley-ngrx application is a number between 1 and 6.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-3.48.37-pm-1836x256.png)
*The app component template displays the "value"*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-3.47.45-pm-1836x447.png)
*The app component class sets the "value"*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-3.42.02-pm-1836x589.png)
*The app component style ensures the value is big enough to see at a distance*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-3.42.08-pm-1254x596.png)
*A random number between 1 and 6.*


## (click)

Every time a user refreshes the haddley-ngrx app a random number is displayed.

I updated the code so that the number is updated in response to a mouse click.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.03.37-pm-1380x341.png)
*I added (click)="updateValue()" to app component template*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.05.03-pm-1380x343.png)
*I added code to update "this.value" to app component class*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.08.28-pm-1380x409.png)
*I refactored the code*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.09.00-pm-1380x423.png)
*I created a "valueBetween1And6" function*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.09.30-pm-1380x469.png)
*I updated the declaration of value to use the "valueBetween1And6" function*


## ng test

I ran "ng test" to check that the haddley-ngrx application was working properly.

Two tests passed and one test failed.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.31.42-pm-1836x361.png)
*ng test*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.32.24-pm-1836x969.png)
*karma page*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.36.09-pm-1836x803.png)
*'haddley-ngrx app is running'?*


## Updating the tests

In this case the haddley-ngrx app is working fine and the test is wrong.

I want the application to display a value between 1 and 6. 

I don't want the application to display 'haddley-ngrx app is running'.

So I updated the last test.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.45.52-pm-1836x584.png)
*app component should render a number between 1 and 6*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-4.43.54-pm-1836x254.png)
*ng test*


## Moving to NGRX

Using NGRX I moved "value" out of the app component and into a store.

I updated the app component to dispatch an Action in response to the (click) and to refresh the page content in response to a store Selector.


## Folders

I created a src/app/state folder and a src/app/state/dice folder.


## dice.actions

I created a dice actions typescript file and defined three actions: {roll, rollSuccess, and rollFailure}

The app component will dispatch a "roll" Action in response to a (click).

The app component will not dispatch the rollSuccess Action or the rollFailure Action.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-5.53.50-pm-1836x307.png)
*npm i @ngrx/store*


## dice.state

I created a dice state typescript file and defined a DiceState interface.

NGRX should not throw an exception in response to the app component dispatching an Action. 

Instead a Selector will return a result (to the component) indicating success or failure.

For completeness I have included a (nullable) error value in the DiceState interface.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-5.48.56-pm-1836x273.png)
*DiceState interface*


## dice.reducer

I created a dice reducer typescript file to specify how Actions will be processed.

The rollSuccess action updates the state.value to the number passed to it as a property.

The rollFailure action updates the state.error to the text passed to it as a property.

It might seem odd that the roll Action updates the state.error but does not update the state.value (see Effects below).

![](/assets/images/ngrx/screen-shot-2022-11-27-at-6.08.17-pm-1836x479.png)
*diceReducer*


## app.state

As my application grows it is likely that I will add features that are unrelated to dice.state. 

With that in mind I have created an app.state interface that can be used in the future to access dice.state and state related to other features.

I added an app.state typescript file to the state folder.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-6.54.08-pm-1836x235.png)
*app.state interface*


## dice.selectors

The app.component will access the dice state using selectors.

I added the dice.selectors typescript file and created the two selectors the app.component needs.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-6.58.27-pm-1836x501.png)
*dice.selectors*


## app.module

To get NGRX to work I needed to add two modules to the app.module file.

First I added StoreModule

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.04.48-pm-1836x579.png)
*adding StoreModule to app.module*


## Using the selectors

I updated app component template and app component class to make use of the selectDiceValue and selectDiceError selectors.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.31.49-pm-1836x714.png)
*app component class*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.33.16-pm-1836x144.png)
*app component template*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.36.00-pm-1260x586.png)
*ng serve -o(click) seems to do nothingrefreshing the page seems to work*


## ng test

After these updates the tests fail.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.39.36-pm-1836x1155.png)
*No provider for Store!*


## MockStore

To get the ng tests to pass we need to add a "mock store"

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.49.48-pm-1836x770.png)
*provideMockStore*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-7.51.03-pm-1836x653.png)
*ng test success*


## dice.effects

When the app component dispatches the "roll" Action the app component does not provide a value.

Without additional effort the roll Action is not in a position to update the state.

NGRX effects address this problem.

I created a DiceEffects class that responds to "roll" Actions.

When the DiceEffects class spots/notices/is notified of a roll Action it calculates a random value between 1 and 6 and then (some moments later) dispatches a corresponding rollSuccess or rollFailure Action.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-8.19.31-pm-1836x798.png)
*dice.effects*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-8.16.52-pm-1836x599.png)
*EffectsModule import added to AppModule*


## Final result

The final result is an Angular application that uses NGRX for state management.

![](/assets/images/ngrx/screen-shot-2022-11-27-at-8.20.53-pm-1836x1021.png)
*ng test*

![](/assets/images/ngrx/screen-shot-2022-11-27-at-8.23.22-pm-1256x592.png)
*ng serve -o*
5:[["$","section",null,{"className":"content4 cid-uBU3VQlp0E","id":"content4-cru","children":["$","div",null,{"className":"container","children":["$","div",null,{"className":"row justify-content-center","children":["$","div",null,{"className":"title col-md-12 col-lg-10","children":[["$","h3",null,{"className":"mbr-section-title mbr-fonts-style align-center mb-4 display-2","children":["$","strong",null,{"children":"NGRX"}]}],["$","h4",null,{"className":"mbr-section-subtitle align-center mbr-fonts-style mb-4 display-5","children":"A framework for building reactive applications in Angular"}]]}]}]}]}],["$","section",null,{"className":"content1 cid-content","id":"content1-breadcrumb","children":["$","div",null,{"className":"container","children":["$","div",null,{"className":"row justify-content-center","children":["$","div",null,{"className":"col-md-12 col-lg-10","children":["$","div",null,{"className":"mb-4","children":["$","$L10",null,{"href":"/posts","className":"link text-primary display-7","children":"← Back to Posts"}]}]}]}]}]}],["$","$L11",null,{"markdownContent":"$12"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
13:I[622,[],"IconMark"]
9:{"metadata":[["$","title","0",{"children":"Neil Haddley - Developer & Technical Consultant"}],["$","meta","1",{"name":"description","content":"I help organizations to connect with clients, comply with regulations, and automate workflows."}],["$","meta","2",{"name":"author","content":"Neil Haddley"}],["$","meta","3",{"name":"keywords","content":"developer, consultant, Azure, Angular, Business Central, automation"}],["$","meta","4",{"name":"creator","content":"Neil Haddley"}],["$","meta","5",{"property":"og:title","content":"Neil Haddley - Developer & Technical Consultant"}],["$","meta","6",{"property":"og:description","content":"I help organizations to connect with clients, comply with regulations, and automate workflows."}],["$","meta","7",{"property":"og:url","content":"https://haddley.github.io/"}],["$","meta","8",{"property":"og:site_name","content":"Neil Haddley"}],["$","meta","9",{"property":"og:locale","content":"en_US"}],["$","meta","10",{"property":"og:type","content":"website"}],["$","meta","11",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","12",{"name":"twitter:title","content":"Neil Haddley - Developer & Technical Consultant"}],["$","meta","13",{"name":"twitter:description","content":"I help organizations to connect with clients, comply with regulations, and automate workflows."}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","$L13","15",{}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
